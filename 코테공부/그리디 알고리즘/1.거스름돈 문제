1.거스름돈: 문제 설명
-당신은 음식점의 계산을 도와주는 점원입니다. 카운터에는 거스름돈으로 사용할 500원, 100원,
 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다. 손님에게 거슬러 주어야 할 돈이
 N원일 때 거슬러 주어야 할 동전의 최소 개수를 구하세요.
 단, 거슬러 줘야 할 돈 N은 항상 10의 배수입니다.

문제해결 아이디어
-최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐 단위부터 돈을 거슬러 주면 됨
-N원을 거슬러 줘야 할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러 줌
    ->이후에 100원,50원,10원짜리 동전을 차례대로 거슬러 줄 수 있을 만큼 거슬러 줌
-N = 1260일 때의 예시를 확인해 보자
    ->500원 2개, 100원2개, 50원 1개, 10원 1개 거슬러 줌
    ->총6개의 동전

정당성 분석
-가장 큰 화폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유?
    ->가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이기 때문
    ->큰 단위 대신에 작은 단위 동전을 주면 갯수가 더 많아짐
-만약에 800원을 거슬러 주어야 하는데 화폐 단위가 500원,400원,100원 이라면?
    ->400원 두개인 것이 최적의 해가 됨
    ->이런 상황이 발생하는 이유는 500이 400의 배수가 아니기 때문
-그리디 알고리즘 문제에서는 이처럼 문제 풀이를 위한 최소한의 아이디어를 떠올리고 이것이
 정당한지 검토할 수 있어야 함

시간복잡도 분석
-화폐의 종류가 K라고 할 때, 소스코드의 시간 복잡도는 O(K)가 됨
-이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무관, 동전의 총 종류에만 영향을 받음
    ->화폐의 종류만큼만 반복문이 수행되기 때문임
 