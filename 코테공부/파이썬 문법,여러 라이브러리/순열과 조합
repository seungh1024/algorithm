순열과 조합
-모든 경우의 수를 고려해야 할 때 어떤 라이브러리를 효과적으로 사용할 수 있을까?
-순열: 서로 다른 n개에서 서로 다른 r개를 선택하여 일렬로 나열하는 것
    ->{'A','B','C'}에서 세 개를 선택하여 나열하는 경우: 'ABC','ACB','BAC','BCA','CAB','CBA'
-조합:서로 다른 n개에서 순서에 상관없이 서로 다른 r개를 선택하는 것
    ->{'A','B','C'}에서 순서를 고려하지 않고 두 개를 뽑는 경우:'AB','AC','BC'
    순열의 수:nPr = n*(n-1)*(n-2)*...*(n-r+1)
    조합의 수:nCr = n*(n-1)*(n-2)*...*(n-r+1)/r!

순열 메서드
from itertools import permutations

data =['A','B','C']

result = list(permutations(data,3))
->data에 3개가 들어있고 그중 서로다른 3개를 선택하는 것이므로 모든 순열을 구하는 것
print(result)

조합 메서드
from itertools imiport combinations
data =['A','B','C']

result = list(permutations(data,2))
->2개를 뽑는 모든 조합을 구하는 것

중복 순열과 중복 조합
from itertools import product ->중복 순열을 구할 때 product 라이브러리 사용

data =['A','B','C']

result = list(permutations(data,2))
->2개를 뽑는 모든 순열 구하기(중복 허용)

from itertools import product 
->중복 조합을 구할 때 combinations_with_replacement 라이브러리 사용

data =['A','B','C']

result = list(combinations_with_replacement(data,2))
->2개를 뽑는 모든 조합 구하기(중복허용)