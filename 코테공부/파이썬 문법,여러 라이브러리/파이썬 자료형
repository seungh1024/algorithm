정수형 -> 정수를 다루는 자료형 (코테에서 정수형을 많이 다룸)

파이썬에서는 e나 E를 이용한 지수 표현 방식을 이용할 수 있음
-e나 E 다음에 오는 수는 10의 지수부를 의미함
Ex) 1e9라고 입력하면 10의 9제곱이 되는 것
-> 유효숫자e^(지수) = 유효숫자*10^(지수)
임의의 큰 수를 표현하기 위해 자주 사용됨
최단 경로 알고리즘에서는 도달할 수 없는 노드에 대하여 최단 거리를 무한(INF)로 설정하곤 함
이 때 가능한 최댓값이 10억 미만이라면 무한(INF)의 값으로 1e9를 이용할 수 있음

실수형 자료를 저장하기 위해서 컴퓨터는 4바이트,8바이트의 고정된 크기의 메모리를 할당함
하지만 컴퓨터 시스템은 실수 정보를 표현하는 정확도에 한계를 가짐
Ex) 10진수 체계에서는 0.3과 0.6을 더한 값이 0.9로 정확히 떨어짐
    ->하지만 2진수에서는 0.9를 정확히 표현할 수 있는 방법이 없음
    ->컴퓨터는 최대한 0.9와 가깝게 표현하지만 미세한 오차가 발생함
실제로 이렇게 되면 원하는 결과를 얻지 못할 수 있음
이 때 사용되는 함수가 round()함수이며 이는 반올림을 해주는 함수임
예를 들어 123.456을 소수 셋째 자리에서 반올림하려면 round(123.456,2)라고 작성

리스트 자료형
여러 데이터를 연속적으로 담아 처리하기 위해 사용하는 자료형
다른 언어의 배열의 기능 및 연결 리스트와 유사한 기능을 지원함
배열 혹은 테이블이라고 부르기도 함
리스트는 대괄호( [] ) 안에 원소를 넣어 초기화, 쉼표로 원소를 구분
비어있는 리스트를 선언하고자 할 때는 list() 혹은 간단하게 []를 이용할 수 있음
리스트의 원소에 접근할 때는 인덱스 값을 괄호에 넣음
인덱스 값을 입력하여 리스트 특정 값에 접근하는 것을 인덱싱 이라고 함
음의 정수를 넣으면 원소를 거꾸로 탐색하게 됨. -1부터 차례대로 작아지는 방식

문자열 자료형
-문자열 변수를 초기화할 때는 큰따옴표나 작은 따옴표를 이용
-문자열 안에 큰따옴표나 작은따옴표가 포함되어야 하는 경우가 있음
    -전체 문자열을 큰따옴표로 구성하는 경우, 내부적으로 작은 따옴표 포함할 수 있음
    -전체 문자열을 작은따옴표로 구성하는 경우, 내부적으로 큰 따옴표를 포함할 수 있음
    -또는 백슬래시(\)를 사용하면, 큰따옴표나 작은따옴표를 원하는 만큼 포함시킬 수 있음
Ex)data = "Don't you know \"Python\"?"
    -> "Don't you know "Python?" 이 출력됨

문자열 연산
-문자열 변수에 덧셈을 이용하면 문자열이 더해져서 연결됨
-문자열 변수를 특정한 양의 정수와 곱하는 경우 문자열이 그 값만큼 여러번 더해짐
-문자열에 대해서도 마찬가지로 인덱싱과 슬라이싱을 이용할 수 있음
    -다만 문자열은 특정 인덱스의 값을 변경할 수는 없음

튜플 자료형
-튜플 자료형은 리스트와 유사하지만 몇가지 차이점이 있음
    -튜플은 한 번 선언된 값을 변경 불가능함
    -리스트는 대괄호를 이용하지만, 튜플은 소괄호를 이용함
-튜플은 리스트에 비해 상대적으로 공간 효율적임(기능이 제한적이기 때문)

튜플을 사용하면 좋은 경우
-서로 다른 성질의 데이터를 묶어서 관리해야 할 때
    ->최단 경로 알고리즘에서는 (비용,노드 번호)의 형태로 튜플 자료형을 자주 사용함
      (하나로 묶어서 사용하는 것)
      학생 정보도 (성적,학번) 이런식으로 묶어서 관리할 떄 튜플을 사용함
-데이터의 나열을 해싱의 키 값으로 사용해야 할 때 
    -튜플은 변경이 불가능하므로 리스트와 다르게 키 값으로 사용할 수 있음
-리스트보다 메모리를 효율적으로 사용해야 할 때

사전 자료형
-사전 자료형은 키 와 값의 쌍(키 밸류 쌍)을 데이터로 가지는 자료형 
    ->앞서 다루었던 리스트나 튜플이 값을 순차적으로 저장하는 것과는 대비됨
-사전 자료형은 키와 값의 쌍을 데이터로 가지며, 원하는 변경 불가능한 자료형을 키로 사용할 수 있음
-파이썬의 사전 자료형은 해시 테이블을 이용하므로 데이터의 조회 및 수정에 있어서 O(1)의 시간에 처리할 수 있음

집합 자료형
-집합은 다음과 같은 특징이 있음
    -중복을 허용하지 않음
    -순서가 없음
-집합은 리스트 혹은 문자열을 이용해서 초기화할 수 있음
    -이 때 set()함수를 이용함
-혹은 중괄호 안에 각 원소를 콤마(,)를 기준으로 구분하여 삽입함으로써 초기화할 수 있음
-데이터의 조회 및 수정에 있어서 O(1)의 시간에 처리할 수 있음
-기본적인 집합 연산으로는 합집합,교집합,차집합 연산 등이 있음


사전 자료형과 집합 자료형의 특징
-리스트나 튜플은 순서가 있기 때문에 인덱싱을 통해 자료형의 값을 얻을 수 있음
-사전 자료형과 집합 자료형은 순서가 없기 때문에 인덱싱으로 값을 얻을 수 없음
    -사전의 키 혹은 집합의 원소를 이용해 O(1)의 시간 복잡도로 조회함